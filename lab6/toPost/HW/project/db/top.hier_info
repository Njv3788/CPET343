|top
clk => rising_edge_synchronizer:sync_ex.clk
clk => rising_edge_synchronizer:sync_ms.clk
clk => rising_edge_synchronizer:sync_mr.clk
clk => synchronizer:sync_input.clk
clk => synchronizer:sync_op.clk
clk => display:bin2hex_dis.clk
clk => calculator:math.clk
reset => rising_edge_synchronizer:sync_ex.reset
reset => rising_edge_synchronizer:sync_ms.reset
reset => rising_edge_synchronizer:sync_mr.reset
reset => synchronizer:sync_input.reset
reset => synchronizer:sync_op.reset
reset => display:bin2hex_dis.reset
reset => calculator:math.reset
execute => rising_edge_synchronizer:sync_ex.input
memory_save => rising_edge_synchronizer:sync_ms.input
memory_recall => rising_edge_synchronizer:sync_mr.input
op_code[0] => synchronizer:sync_op.async_in[0]
op_code[1] => synchronizer:sync_op.async_in[1]
input[0] => synchronizer:sync_input.async_in[0]
input[1] => synchronizer:sync_input.async_in[1]
input[2] => synchronizer:sync_input.async_in[2]
input[3] => synchronizer:sync_input.async_in[3]
input[4] => synchronizer:sync_input.async_in[4]
input[5] => synchronizer:sync_input.async_in[5]
input[6] => synchronizer:sync_input.async_in[6]
input[7] => synchronizer:sync_input.async_in[7]
one_out[0] <= display:bin2hex_dis.one_out[0]
one_out[1] <= display:bin2hex_dis.one_out[1]
one_out[2] <= display:bin2hex_dis.one_out[2]
one_out[3] <= display:bin2hex_dis.one_out[3]
one_out[4] <= display:bin2hex_dis.one_out[4]
one_out[5] <= display:bin2hex_dis.one_out[5]
one_out[6] <= display:bin2hex_dis.one_out[6]
ten_out[0] <= display:bin2hex_dis.ten_out[0]
ten_out[1] <= display:bin2hex_dis.ten_out[1]
ten_out[2] <= display:bin2hex_dis.ten_out[2]
ten_out[3] <= display:bin2hex_dis.ten_out[3]
ten_out[4] <= display:bin2hex_dis.ten_out[4]
ten_out[5] <= display:bin2hex_dis.ten_out[5]
ten_out[6] <= display:bin2hex_dis.ten_out[6]
hun_out[0] <= display:bin2hex_dis.hun_out[0]
hun_out[1] <= display:bin2hex_dis.hun_out[1]
hun_out[2] <= display:bin2hex_dis.hun_out[2]
hun_out[3] <= display:bin2hex_dis.hun_out[3]
hun_out[4] <= display:bin2hex_dis.hun_out[4]
hun_out[5] <= display:bin2hex_dis.hun_out[5]
hun_out[6] <= display:bin2hex_dis.hun_out[6]
state_out[0] <= calculator:math.state_out[0]
state_out[1] <= calculator:math.state_out[1]
state_out[2] <= calculator:math.state_out[2]
state_out[3] <= calculator:math.state_out[3]
state_out[4] <= calculator:math.state_out[4]


|top|rising_edge_synchronizer:sync_ex
clk => input_zzz.CLK
clk => edge~reg0.CLK
clk => input_zz.CLK
clk => input_z.CLK
reset => input_zzz.PRESET
reset => edge~reg0.ACLR
reset => input_zz.PRESET
reset => input_z.PRESET
input => input_z.DATAIN
edge <= edge~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|rising_edge_synchronizer:sync_ms
clk => input_zzz.CLK
clk => edge~reg0.CLK
clk => input_zz.CLK
clk => input_z.CLK
reset => input_zzz.PRESET
reset => edge~reg0.ACLR
reset => input_zz.PRESET
reset => input_z.PRESET
input => input_z.DATAIN
edge <= edge~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|rising_edge_synchronizer:sync_mr
clk => input_zzz.CLK
clk => edge~reg0.CLK
clk => input_zz.CLK
clk => input_z.CLK
reset => input_zzz.PRESET
reset => edge~reg0.ACLR
reset => input_zz.PRESET
reset => input_z.PRESET
input => input_z.DATAIN
edge <= edge~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|synchronizer:sync_input
clk => flop3[0].CLK
clk => flop3[1].CLK
clk => flop3[2].CLK
clk => flop3[3].CLK
clk => flop3[4].CLK
clk => flop3[5].CLK
clk => flop3[6].CLK
clk => flop3[7].CLK
clk => flop2[0].CLK
clk => flop2[1].CLK
clk => flop2[2].CLK
clk => flop2[3].CLK
clk => flop2[4].CLK
clk => flop2[5].CLK
clk => flop2[6].CLK
clk => flop2[7].CLK
clk => flop1[0].CLK
clk => flop1[1].CLK
clk => flop1[2].CLK
clk => flop1[3].CLK
clk => flop1[4].CLK
clk => flop1[5].CLK
clk => flop1[6].CLK
clk => flop1[7].CLK
reset => flop3[0].ACLR
reset => flop3[1].ACLR
reset => flop3[2].ACLR
reset => flop3[3].ACLR
reset => flop3[4].ACLR
reset => flop3[5].ACLR
reset => flop3[6].ACLR
reset => flop3[7].ACLR
reset => flop2[0].ACLR
reset => flop2[1].ACLR
reset => flop2[2].ACLR
reset => flop2[3].ACLR
reset => flop2[4].ACLR
reset => flop2[5].ACLR
reset => flop2[6].ACLR
reset => flop2[7].ACLR
reset => flop1[0].ACLR
reset => flop1[1].ACLR
reset => flop1[2].ACLR
reset => flop1[3].ACLR
reset => flop1[4].ACLR
reset => flop1[5].ACLR
reset => flop1[6].ACLR
reset => flop1[7].ACLR
async_in[0] => flop1[0].DATAIN
async_in[1] => flop1[1].DATAIN
async_in[2] => flop1[2].DATAIN
async_in[3] => flop1[3].DATAIN
async_in[4] => flop1[4].DATAIN
async_in[5] => flop1[5].DATAIN
async_in[6] => flop1[6].DATAIN
async_in[7] => flop1[7].DATAIN
sync_out[0] <= flop3[0].DB_MAX_OUTPUT_PORT_TYPE
sync_out[1] <= flop3[1].DB_MAX_OUTPUT_PORT_TYPE
sync_out[2] <= flop3[2].DB_MAX_OUTPUT_PORT_TYPE
sync_out[3] <= flop3[3].DB_MAX_OUTPUT_PORT_TYPE
sync_out[4] <= flop3[4].DB_MAX_OUTPUT_PORT_TYPE
sync_out[5] <= flop3[5].DB_MAX_OUTPUT_PORT_TYPE
sync_out[6] <= flop3[6].DB_MAX_OUTPUT_PORT_TYPE
sync_out[7] <= flop3[7].DB_MAX_OUTPUT_PORT_TYPE


|top|synchronizer:sync_op
clk => flop3[0].CLK
clk => flop3[1].CLK
clk => flop2[0].CLK
clk => flop2[1].CLK
clk => flop1[0].CLK
clk => flop1[1].CLK
reset => flop3[0].ACLR
reset => flop3[1].ACLR
reset => flop2[0].ACLR
reset => flop2[1].ACLR
reset => flop1[0].ACLR
reset => flop1[1].ACLR
async_in[0] => flop1[0].DATAIN
async_in[1] => flop1[1].DATAIN
sync_out[0] <= flop3[0].DB_MAX_OUTPUT_PORT_TYPE
sync_out[1] <= flop3[1].DB_MAX_OUTPUT_PORT_TYPE


|top|display:bin2hex_dis
clk => seven_seg:display_one.clk
clk => seven_seg:display_ten.clk
clk => seven_seg:display_hun.clk
reset => seven_seg:display_one.reset
reset => seven_seg:display_ten.reset
reset => seven_seg:display_hun.reset
input[0] => double_dabble:presto_chango.input[0]
input[1] => double_dabble:presto_chango.input[1]
input[2] => double_dabble:presto_chango.input[2]
input[3] => double_dabble:presto_chango.input[3]
input[4] => double_dabble:presto_chango.input[4]
input[5] => double_dabble:presto_chango.input[5]
input[6] => double_dabble:presto_chango.input[6]
input[7] => double_dabble:presto_chango.input[7]
one_out[0] <= seven_seg:display_one.seven_seg_out[0]
one_out[1] <= seven_seg:display_one.seven_seg_out[1]
one_out[2] <= seven_seg:display_one.seven_seg_out[2]
one_out[3] <= seven_seg:display_one.seven_seg_out[3]
one_out[4] <= seven_seg:display_one.seven_seg_out[4]
one_out[5] <= seven_seg:display_one.seven_seg_out[5]
one_out[6] <= seven_seg:display_one.seven_seg_out[6]
ten_out[0] <= seven_seg:display_ten.seven_seg_out[0]
ten_out[1] <= seven_seg:display_ten.seven_seg_out[1]
ten_out[2] <= seven_seg:display_ten.seven_seg_out[2]
ten_out[3] <= seven_seg:display_ten.seven_seg_out[3]
ten_out[4] <= seven_seg:display_ten.seven_seg_out[4]
ten_out[5] <= seven_seg:display_ten.seven_seg_out[5]
ten_out[6] <= seven_seg:display_ten.seven_seg_out[6]
hun_out[0] <= seven_seg:display_hun.seven_seg_out[0]
hun_out[1] <= seven_seg:display_hun.seven_seg_out[1]
hun_out[2] <= seven_seg:display_hun.seven_seg_out[2]
hun_out[3] <= seven_seg:display_hun.seven_seg_out[3]
hun_out[4] <= seven_seg:display_hun.seven_seg_out[4]
hun_out[5] <= seven_seg:display_hun.seven_seg_out[5]
hun_out[6] <= seven_seg:display_hun.seven_seg_out[6]


|top|display:bin2hex_dis|seven_seg:display_one
clk => seven_seg_out[0]~reg0.CLK
clk => seven_seg_out[1]~reg0.CLK
clk => seven_seg_out[2]~reg0.CLK
clk => seven_seg_out[3]~reg0.CLK
clk => seven_seg_out[4]~reg0.CLK
clk => seven_seg_out[5]~reg0.CLK
clk => seven_seg_out[6]~reg0.CLK
reset => seven_seg_out[0]~reg0.PRESET
reset => seven_seg_out[1]~reg0.PRESET
reset => seven_seg_out[2]~reg0.PRESET
reset => seven_seg_out[3]~reg0.PRESET
reset => seven_seg_out[4]~reg0.PRESET
reset => seven_seg_out[5]~reg0.PRESET
reset => seven_seg_out[6]~reg0.PRESET
bcd[0] => Mux0.IN19
bcd[0] => Mux1.IN19
bcd[0] => Mux2.IN19
bcd[0] => Mux3.IN19
bcd[0] => Mux4.IN19
bcd[0] => Mux5.IN19
bcd[0] => Mux6.IN19
bcd[1] => Mux0.IN18
bcd[1] => Mux1.IN18
bcd[1] => Mux2.IN18
bcd[1] => Mux3.IN18
bcd[1] => Mux4.IN18
bcd[1] => Mux5.IN18
bcd[1] => Mux6.IN18
bcd[2] => Mux0.IN17
bcd[2] => Mux1.IN17
bcd[2] => Mux2.IN17
bcd[2] => Mux3.IN17
bcd[2] => Mux4.IN17
bcd[2] => Mux5.IN17
bcd[2] => Mux6.IN17
bcd[3] => Mux0.IN16
bcd[3] => Mux1.IN16
bcd[3] => Mux2.IN16
bcd[3] => Mux3.IN16
bcd[3] => Mux4.IN16
bcd[3] => Mux5.IN16
bcd[3] => Mux6.IN16
seven_seg_out[0] <= seven_seg_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_out[1] <= seven_seg_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_out[2] <= seven_seg_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_out[3] <= seven_seg_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_out[4] <= seven_seg_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_out[5] <= seven_seg_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_out[6] <= seven_seg_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|display:bin2hex_dis|seven_seg:display_ten
clk => seven_seg_out[0]~reg0.CLK
clk => seven_seg_out[1]~reg0.CLK
clk => seven_seg_out[2]~reg0.CLK
clk => seven_seg_out[3]~reg0.CLK
clk => seven_seg_out[4]~reg0.CLK
clk => seven_seg_out[5]~reg0.CLK
clk => seven_seg_out[6]~reg0.CLK
reset => seven_seg_out[0]~reg0.PRESET
reset => seven_seg_out[1]~reg0.PRESET
reset => seven_seg_out[2]~reg0.PRESET
reset => seven_seg_out[3]~reg0.PRESET
reset => seven_seg_out[4]~reg0.PRESET
reset => seven_seg_out[5]~reg0.PRESET
reset => seven_seg_out[6]~reg0.PRESET
bcd[0] => Mux0.IN19
bcd[0] => Mux1.IN19
bcd[0] => Mux2.IN19
bcd[0] => Mux3.IN19
bcd[0] => Mux4.IN19
bcd[0] => Mux5.IN19
bcd[0] => Mux6.IN19
bcd[1] => Mux0.IN18
bcd[1] => Mux1.IN18
bcd[1] => Mux2.IN18
bcd[1] => Mux3.IN18
bcd[1] => Mux4.IN18
bcd[1] => Mux5.IN18
bcd[1] => Mux6.IN18
bcd[2] => Mux0.IN17
bcd[2] => Mux1.IN17
bcd[2] => Mux2.IN17
bcd[2] => Mux3.IN17
bcd[2] => Mux4.IN17
bcd[2] => Mux5.IN17
bcd[2] => Mux6.IN17
bcd[3] => Mux0.IN16
bcd[3] => Mux1.IN16
bcd[3] => Mux2.IN16
bcd[3] => Mux3.IN16
bcd[3] => Mux4.IN16
bcd[3] => Mux5.IN16
bcd[3] => Mux6.IN16
seven_seg_out[0] <= seven_seg_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_out[1] <= seven_seg_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_out[2] <= seven_seg_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_out[3] <= seven_seg_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_out[4] <= seven_seg_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_out[5] <= seven_seg_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_out[6] <= seven_seg_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|display:bin2hex_dis|seven_seg:display_hun
clk => seven_seg_out[0]~reg0.CLK
clk => seven_seg_out[1]~reg0.CLK
clk => seven_seg_out[2]~reg0.CLK
clk => seven_seg_out[3]~reg0.CLK
clk => seven_seg_out[4]~reg0.CLK
clk => seven_seg_out[5]~reg0.CLK
clk => seven_seg_out[6]~reg0.CLK
reset => seven_seg_out[0]~reg0.PRESET
reset => seven_seg_out[1]~reg0.PRESET
reset => seven_seg_out[2]~reg0.PRESET
reset => seven_seg_out[3]~reg0.PRESET
reset => seven_seg_out[4]~reg0.PRESET
reset => seven_seg_out[5]~reg0.PRESET
reset => seven_seg_out[6]~reg0.PRESET
bcd[0] => Mux0.IN19
bcd[0] => Mux1.IN19
bcd[0] => Mux2.IN19
bcd[0] => Mux3.IN19
bcd[0] => Mux4.IN19
bcd[0] => Mux5.IN19
bcd[0] => Mux6.IN19
bcd[1] => Mux0.IN18
bcd[1] => Mux1.IN18
bcd[1] => Mux2.IN18
bcd[1] => Mux3.IN18
bcd[1] => Mux4.IN18
bcd[1] => Mux5.IN18
bcd[1] => Mux6.IN18
bcd[2] => Mux0.IN17
bcd[2] => Mux1.IN17
bcd[2] => Mux2.IN17
bcd[2] => Mux3.IN17
bcd[2] => Mux4.IN17
bcd[2] => Mux5.IN17
bcd[2] => Mux6.IN17
bcd[3] => Mux0.IN16
bcd[3] => Mux1.IN16
bcd[3] => Mux2.IN16
bcd[3] => Mux3.IN16
bcd[3] => Mux4.IN16
bcd[3] => Mux5.IN16
bcd[3] => Mux6.IN16
seven_seg_out[0] <= seven_seg_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_out[1] <= seven_seg_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_out[2] <= seven_seg_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_out[3] <= seven_seg_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_out[4] <= seven_seg_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_out[5] <= seven_seg_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_out[6] <= seven_seg_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|display:bin2hex_dis|double_dabble:presto_chango
input[0] => ones[0].DATAIN
input[1] => LessThan15.IN8
input[1] => Add15.IN8
input[1] => bcd.DATAA
input[2] => LessThan12.IN8
input[2] => Add12.IN8
input[2] => bcd.DATAA
input[3] => LessThan9.IN8
input[3] => Add9.IN8
input[3] => bcd.DATAA
input[4] => LessThan7.IN8
input[4] => Add7.IN8
input[4] => bcd.DATAA
input[5] => LessThan5.IN8
input[5] => Add5.IN8
input[5] => bcd.DATAA
input[6] => LessThan3.IN8
input[6] => Add3.IN8
input[6] => bcd.DATAA
input[7] => LessThan2.IN8
input[7] => Add2.IN8
input[7] => bcd.DATAA
ones[0] <= input[0].DB_MAX_OUTPUT_PORT_TYPE
ones[1] <= bcd.DB_MAX_OUTPUT_PORT_TYPE
ones[2] <= bcd.DB_MAX_OUTPUT_PORT_TYPE
ones[3] <= bcd.DB_MAX_OUTPUT_PORT_TYPE
tens[0] <= bcd.DB_MAX_OUTPUT_PORT_TYPE
tens[1] <= bcd.DB_MAX_OUTPUT_PORT_TYPE
tens[2] <= bcd.DB_MAX_OUTPUT_PORT_TYPE
tens[3] <= bcd.DB_MAX_OUTPUT_PORT_TYPE
hundreds[0] <= bcd.DB_MAX_OUTPUT_PORT_TYPE
hundreds[1] <= bcd.DB_MAX_OUTPUT_PORT_TYPE
hundreds[2] <= bcd.DB_MAX_OUTPUT_PORT_TYPE
hundreds[3] <= bcd.DB_MAX_OUTPUT_PORT_TYPE


|top|calculator:math
clk => State_machine:state_changer.clk
clk => memory:ram_gen.clk
clk => alu:math.clk
reset => State_machine:state_changer.reset
reset => alu:math.reset
execute => State_machine:state_changer.execute
memory_save => State_machine:state_changer.memory_save
memory_recall => State_machine:state_changer.memory_recall
op_code[0] => alu:math.op[0]
op_code[1] => alu:math.op[1]
input[0] => alu:math.b[0]
input[1] => alu:math.b[1]
input[2] => alu:math.b[2]
input[3] => alu:math.b[3]
input[4] => alu:math.b[4]
input[5] => alu:math.b[5]
input[6] => alu:math.b[6]
input[7] => alu:math.b[7]
output[0] <= memory:ram_gen.dout[0]
output[1] <= memory:ram_gen.dout[1]
output[2] <= memory:ram_gen.dout[2]
output[3] <= memory:ram_gen.dout[3]
output[4] <= memory:ram_gen.dout[4]
output[5] <= memory:ram_gen.dout[5]
output[6] <= memory:ram_gen.dout[6]
output[7] <= memory:ram_gen.dout[7]
state_out[0] <= State_machine:state_changer.state[0]
state_out[1] <= State_machine:state_changer.state[1]
state_out[2] <= State_machine:state_changer.state[2]
state_out[3] <= State_machine:state_changer.state[3]
state_out[4] <= State_machine:state_changer.state[4]


|top|calculator:math|State_machine:state_changer
clk => z_r_w_work[0].CLK
clk => z_r_w_work[1].CLK
clk => current_state[0].CLK
clk => current_state[1].CLK
clk => current_state[2].CLK
clk => current_state[3].CLK
clk => current_state[4].CLK
reset => z_r_w_work[0].ACLR
reset => z_r_w_work[1].ACLR
reset => current_state[0].PRESET
reset => current_state[1].ACLR
reset => current_state[2].ACLR
reset => current_state[3].ACLR
reset => current_state[4].ACLR
execute => next_state.OUTPUTSELECT
execute => next_state.OUTPUTSELECT
execute => next_state.OUTPUTSELECT
execute => Mux3.IN31
memory_save => next_state.OUTPUTSELECT
memory_save => next_state.OUTPUTSELECT
memory_save => next_state.DATAA
memory_recall => next_state.DATAA
memory_recall => next_state.DATAA
write_enable <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
memory_in_sel <= memory_in_sel.DB_MAX_OUTPUT_PORT_TYPE
address_sel <= address_sel.DB_MAX_OUTPUT_PORT_TYPE
state[0] <= current_state[0].DB_MAX_OUTPUT_PORT_TYPE
state[1] <= current_state[1].DB_MAX_OUTPUT_PORT_TYPE
state[2] <= current_state[2].DB_MAX_OUTPUT_PORT_TYPE
state[3] <= current_state[3].DB_MAX_OUTPUT_PORT_TYPE
state[4] <= current_state[4].DB_MAX_OUTPUT_PORT_TYPE


|top|calculator:math|memory:ram_gen
clk => RAM~10.CLK
clk => RAM~0.CLK
clk => RAM~1.CLK
clk => RAM~2.CLK
clk => RAM~3.CLK
clk => RAM~4.CLK
clk => RAM~5.CLK
clk => RAM~6.CLK
clk => RAM~7.CLK
clk => RAM~8.CLK
clk => RAM~9.CLK
clk => dout[0]~reg0.CLK
clk => dout[1]~reg0.CLK
clk => dout[2]~reg0.CLK
clk => dout[3]~reg0.CLK
clk => dout[4]~reg0.CLK
clk => dout[5]~reg0.CLK
clk => dout[6]~reg0.CLK
clk => dout[7]~reg0.CLK
clk => RAM.CLK0
we => RAM~10.DATAIN
we => RAM.WE
addr[0] => RAM~1.DATAIN
addr[0] => RAM.WADDR
addr[0] => RAM.RADDR
addr[1] => RAM~0.DATAIN
addr[1] => RAM.WADDR1
addr[1] => RAM.RADDR1
din[0] => RAM~9.DATAIN
din[0] => RAM.DATAIN
din[1] => RAM~8.DATAIN
din[1] => RAM.DATAIN1
din[2] => RAM~7.DATAIN
din[2] => RAM.DATAIN2
din[3] => RAM~6.DATAIN
din[3] => RAM.DATAIN3
din[4] => RAM~5.DATAIN
din[4] => RAM.DATAIN4
din[5] => RAM~4.DATAIN
din[5] => RAM.DATAIN5
din[6] => RAM~3.DATAIN
din[6] => RAM.DATAIN6
din[7] => RAM~2.DATAIN
din[7] => RAM.DATAIN7
dout[0] <= dout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= dout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= dout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= dout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= dout[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= dout[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= dout[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= dout[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|calculator:math|alu:math
clk => result_temp[0].CLK
clk => result_temp[1].CLK
clk => result_temp[2].CLK
clk => result_temp[3].CLK
clk => result_temp[4].CLK
clk => result_temp[5].CLK
clk => result_temp[6].CLK
clk => result_temp[7].CLK
clk => result[0]~reg0.CLK
clk => result[1]~reg0.CLK
clk => result[2]~reg0.CLK
clk => result[3]~reg0.CLK
clk => result[4]~reg0.CLK
clk => result[5]~reg0.CLK
clk => result[6]~reg0.CLK
clk => result[7]~reg0.CLK
reset => result[0]~reg0.ACLR
reset => result[1]~reg0.ACLR
reset => result[2]~reg0.ACLR
reset => result[3]~reg0.ACLR
reset => result[4]~reg0.ACLR
reset => result[5]~reg0.ACLR
reset => result[6]~reg0.ACLR
reset => result[7]~reg0.ACLR
reset => result_temp[0].ENA
reset => result_temp[7].ENA
reset => result_temp[6].ENA
reset => result_temp[5].ENA
reset => result_temp[4].ENA
reset => result_temp[3].ENA
reset => result_temp[2].ENA
reset => result_temp[1].ENA
a[0] => Add0.IN8
a[0] => Add1.IN16
a[0] => Mult0.IN7
a[0] => Div0.IN23
a[1] => Add0.IN7
a[1] => Add1.IN15
a[1] => Mult0.IN6
a[1] => Div0.IN22
a[2] => Add0.IN6
a[2] => Add1.IN14
a[2] => Mult0.IN5
a[2] => Div0.IN21
a[3] => Add0.IN5
a[3] => Add1.IN13
a[3] => Mult0.IN4
a[3] => Div0.IN20
a[4] => Add0.IN4
a[4] => Add1.IN12
a[4] => Mult0.IN3
a[4] => Div0.IN19
a[5] => Add0.IN3
a[5] => Add1.IN11
a[5] => Mult0.IN2
a[5] => Div0.IN18
a[6] => Add0.IN2
a[6] => Add1.IN10
a[6] => Mult0.IN1
a[6] => Div0.IN17
a[7] => Add0.IN1
a[7] => Add1.IN9
a[7] => Mult0.IN0
a[7] => Div0.IN16
b[0] => Add0.IN16
b[0] => Mult0.IN15
b[0] => Div0.IN31
b[0] => Add1.IN8
b[1] => Add0.IN15
b[1] => Mult0.IN14
b[1] => Div0.IN30
b[1] => Add1.IN7
b[2] => Add0.IN14
b[2] => Mult0.IN13
b[2] => Div0.IN29
b[2] => Add1.IN6
b[3] => Add0.IN13
b[3] => Mult0.IN12
b[3] => Div0.IN28
b[3] => Add1.IN5
b[4] => Add0.IN12
b[4] => Mult0.IN11
b[4] => Div0.IN27
b[4] => Add1.IN4
b[5] => Add0.IN11
b[5] => Mult0.IN10
b[5] => Div0.IN26
b[5] => Add1.IN3
b[6] => Add0.IN10
b[6] => Mult0.IN9
b[6] => Div0.IN25
b[6] => Add1.IN2
b[7] => Add0.IN9
b[7] => Mult0.IN8
b[7] => Div0.IN24
b[7] => Add1.IN1
op[0] => Equal0.IN1
op[0] => Equal1.IN1
op[0] => Equal2.IN0
op[0] => Equal3.IN1
op[1] => Equal0.IN0
op[1] => Equal1.IN0
op[1] => Equal2.IN1
op[1] => Equal3.IN0
result[0] <= result[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= result[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= result[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= result[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= result[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= result[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


